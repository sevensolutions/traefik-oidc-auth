services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    restart: unless-stopped
    ports:
      - "8000:8080"
    environment:
      KC_HOSTNAME: "http://127-0-0-1.sslip.io:8000"
      KC_DB_URL: jdbc:postgresql://keycloak_postgres:5432/keycloak
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    volumes:
      - "./master-realm.json:/opt/keycloak/data/import/master-realm.json:ro"
    depends_on:
      - keycloak_postgres
    command: ['start-dev', '--import-realm']

  keycloak_postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data

  traefik:
    image: "traefik:v3.3.2"
    ports:
      - "9080:80"
      - "8080:8080"
    extra_hosts:
      - "127-0-0-1.sslip.io:172.17.0.1" # To make OIDC discovery work correctly
    volumes:
      - "../configs/traefik-config.yml:/etc/traefik/traefik.yml:ro"
      - "../configs/http.yml:/etc/traefik/configs/http.yml:ro"
      - "../..:/plugins-local/src/github.com/sevensolutions/traefik-oidc-auth:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      PROVIDER_URL: http://127-0-0-1.sslip.io:8000/realms/master
      CLIENT_ID: traefik
      CLIENT_SECRET: LQslcjK8ZeRrrhW7jKaFUUous9W5QvCr
      VALIDATE_AUDIENCE: true

  whoami:
    image: "traefik/whoami:latest"

volumes:
  keycloak_postgres_data:
